<?xml version="1.0" encoding="UTF-8"?>
<project name="soccerfield" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.animationx2.5.classpath">
    <pathelement location="${basedir}/libs/animationx2.5.jar"/>
  </path>
  
  <path id="library.apache-httpclient.classpath">
    <fileset dir="${basedir}/libs">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.commons-io-2.4.classpath">
    <pathelement location="${basedir}/libs/commons-io-2.4.jar"/>
  </path>
  
  <path id="library.gson-2.2.4.classpath">
    <pathelement location="${basedir}/libs/gson-2.2.4.jar"/>
  </path>
  
  <path id="library.lib.classpath">
    <pathelement location="${basedir}/../Players-Generator/lib/gson-2.2.4.jar"/>
    <pathelement location="${basedir}/../Players-Generator/lib/miglayout-4.0-swing.jar"/>
  </path>
  
  <path id="library.synthetica.classpath">
    <pathelement location="${basedir}/libs/synthetica.jar"/>
  </path>
  
  <path id="library.syntheticablueice.classpath">
    <pathelement location="${basedir}/libs/syntheticaBlueIce.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module Players-Generator -->
  
  <dirname property="module.players-generator.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.players-generator" value="${compiler.args}"/>
  
  <property name="players-generator.output.dir" value="${module.players-generator.basedir}/out/production/Players-Generator"/>
  <property name="players-generator.testoutput.dir" value="${module.players-generator.basedir}/out/test/Players-Generator"/>
  
  <path id="players-generator.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="players-generator.module.production.classpath">
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="players-generator.runtime.production.module.classpath">
    <pathelement location="${players-generator.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="players-generator.module.classpath">
    <pathelement location="${players-generator.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="players-generator.runtime.module.classpath">
    <pathelement location="${players-generator.testoutput.dir}"/>
    <pathelement location="${players-generator.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.players-generator">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.players-generator">
    <patternset refid="excluded.from.module.players-generator"/>
  </patternset>
  
  <path id="players-generator.module.sourcepath">
    <dirset dir="${module.players-generator.basedir}/../Players-Generator">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.players-generator" depends="compile.module.players-generator.production,compile.module.players-generator.tests" description="Compile module Players-Generator"/>
  
  <target name="compile.module.players-generator.production" description="Compile module Players-Generator; production classes">
    <mkdir dir="${players-generator.output.dir}"/>
    <javac destdir="${players-generator.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.players-generator}"/>
      <bootclasspath refid="players-generator.module.bootclasspath"/>
      <classpath refid="players-generator.module.production.classpath"/>
      <src refid="players-generator.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.players-generator"/>
    </javac>
    
    <copy todir="${players-generator.output.dir}">
      <fileset dir="${module.players-generator.basedir}/../Players-Generator/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.players-generator.tests" depends="compile.module.players-generator.production" description="compile module Players-Generator; test classes" unless="skip.tests"/>
  
  <target name="clean.module.players-generator" description="cleanup module">
    <delete dir="${players-generator.output.dir}"/>
    <delete dir="${players-generator.testoutput.dir}"/>
  </target>
  
  
  <!-- Module SCDCommunication -->
  
  <dirname property="module.scdcommunication.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.scdcommunication" value="${compiler.args}"/>
  
  <property name="scdcommunication.output.dir" value="${module.scdcommunication.basedir}/../SCDCommunication/bin"/>
  <property name="scdcommunication.testoutput.dir" value="${module.scdcommunication.basedir}/../SCDCommunication/bin"/>
  
  <path id="scdcommunication.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="scdcommunication.module.production.classpath">
    <pathelement location="${basedir}/../SCDCommunication/libs/java_websocket.jar"/>
  </path>
  
  <path id="scdcommunication.runtime.production.module.classpath">
    <pathelement location="${scdcommunication.output.dir}"/>
    <pathelement location="${basedir}/../SCDCommunication/libs/java_websocket.jar"/>
  </path>
  
  <path id="scdcommunication.module.classpath">
    <pathelement location="${scdcommunication.output.dir}"/>
    <pathelement location="${basedir}/../SCDCommunication/libs/java_websocket.jar"/>
  </path>
  
  <path id="scdcommunication.runtime.module.classpath">
    <pathelement location="${scdcommunication.output.dir}"/>
    <pathelement location="${basedir}/../SCDCommunication/libs/java_websocket.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.scdcommunication">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.scdcommunication">
    <patternset refid="excluded.from.module.scdcommunication"/>
  </patternset>
  
  <path id="scdcommunication.module.sourcepath">
    <dirset dir="${module.scdcommunication.basedir}/../SCDCommunication">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.scdcommunication" depends="compile.module.scdcommunication.production,compile.module.scdcommunication.tests" description="Compile module SCDCommunication"/>
  
  <target name="compile.module.scdcommunication.production" description="Compile module SCDCommunication; production classes">
    <mkdir dir="${scdcommunication.output.dir}"/>
    <javac destdir="${scdcommunication.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.scdcommunication}"/>
      <bootclasspath refid="scdcommunication.module.bootclasspath"/>
      <classpath refid="scdcommunication.module.production.classpath"/>
      <src refid="scdcommunication.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.scdcommunication"/>
    </javac>
    
    <copy todir="${scdcommunication.output.dir}">
      <fileset dir="${module.scdcommunication.basedir}/../SCDCommunication/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.scdcommunication.tests" depends="compile.module.scdcommunication.production" description="compile module SCDCommunication; test classes" unless="skip.tests"/>
  
  <target name="clean.module.scdcommunication" description="cleanup module">
    <delete dir="${scdcommunication.output.dir}"/>
    <delete dir="${scdcommunication.testoutput.dir}"/>
  </target>
  
  
  <!-- Module SoccerField -->
  
  <dirname property="module.soccerfield.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.soccerfield" value="${compiler.args}"/>
  
  <property name="soccerfield.output.dir" value="${module.soccerfield.basedir}/out/production/SoccerField"/>
  <property name="soccerfield.testoutput.dir" value="${module.soccerfield.basedir}/out/test/SoccerField"/>
  
  <path id="soccerfield.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="soccerfield.module.production.classpath">
    <pathelement location="${scdcommunication.output.dir}"/>
    <pathelement location="${basedir}/../SCDCommunication/libs/java_websocket.jar"/>
    <path refid="library.apache-httpclient.classpath"/>
    <path refid="library.gson-2.2.4.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.animationx2.5.classpath"/>
    <path refid="library.syntheticablueice.classpath"/>
    <path refid="library.synthetica.classpath"/>
    <pathelement location="${players-generator.output.dir}"/>
  </path>
  
  <path id="soccerfield.runtime.production.module.classpath">
    <pathelement location="${soccerfield.output.dir}"/>
    <path refid="scdcommunication.runtime.production.module.classpath"/>
    <path refid="library.apache-httpclient.classpath"/>
    <path refid="library.gson-2.2.4.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.animationx2.5.classpath"/>
    <path refid="library.syntheticablueice.classpath"/>
    <path refid="library.synthetica.classpath"/>
    <path refid="players-generator.runtime.production.module.classpath"/>
  </path>
  
  <path id="soccerfield.module.classpath">
    <pathelement location="${soccerfield.output.dir}"/>
    <pathelement location="${scdcommunication.output.dir}"/>
    <pathelement location="${basedir}/../SCDCommunication/libs/java_websocket.jar"/>
    <path refid="library.apache-httpclient.classpath"/>
    <path refid="library.gson-2.2.4.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.animationx2.5.classpath"/>
    <path refid="library.syntheticablueice.classpath"/>
    <path refid="library.synthetica.classpath"/>
    <pathelement location="${players-generator.testoutput.dir}"/>
    <pathelement location="${players-generator.output.dir}"/>
  </path>
  
  <path id="soccerfield.runtime.module.classpath">
    <pathelement location="${soccerfield.testoutput.dir}"/>
    <pathelement location="${soccerfield.output.dir}"/>
    <path refid="scdcommunication.runtime.module.classpath"/>
    <path refid="library.apache-httpclient.classpath"/>
    <path refid="library.gson-2.2.4.classpath"/>
    <path refid="library.commons-io-2.4.classpath"/>
    <path refid="library.animationx2.5.classpath"/>
    <path refid="library.syntheticablueice.classpath"/>
    <path refid="library.synthetica.classpath"/>
    <path refid="players-generator.runtime.module.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.soccerfield">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.soccerfield">
    <patternset refid="excluded.from.module.soccerfield"/>
  </patternset>
  
  <path id="soccerfield.module.sourcepath">
    <dirset dir="${module.soccerfield.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.soccerfield" depends="compile.module.soccerfield.production,compile.module.soccerfield.tests" description="Compile module SoccerField"/>
  
  <target name="compile.module.soccerfield.production" depends="compile.module.scdcommunication,compile.module.players-generator" description="Compile module SoccerField; production classes">
    <mkdir dir="${soccerfield.output.dir}"/>
    <javac destdir="${soccerfield.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.soccerfield}"/>
      <bootclasspath refid="soccerfield.module.bootclasspath"/>
      <classpath refid="soccerfield.module.production.classpath"/>
      <src refid="soccerfield.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.soccerfield"/>
    </javac>
    
    <copy todir="${soccerfield.output.dir}">
      <fileset dir="${module.soccerfield.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.soccerfield.tests" depends="compile.module.soccerfield.production" description="compile module SoccerField; test classes" unless="skip.tests"/>
  
  <target name="clean.module.soccerfield" description="cleanup module">
    <delete dir="${soccerfield.output.dir}"/>
    <delete dir="${soccerfield.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.players-generator, clean.module.scdcommunication, clean.module.soccerfield" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.players-generator, compile.module.scdcommunication, compile.module.soccerfield" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.soccerfield:jar" value="${basedir}/out/artifacts/SoccerField_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.SoccerField.jar" value="${artifacts.temp.dir}/SoccerField.jar"/>
  </target>
  
  <target name="artifact.soccerfield:jar" depends="init.artifacts, compile.module.soccerfield, compile.module.scdcommunication, compile.module.players-generator" description="Build &#39;SoccerField:jar&#39; artifact">
    <property name="artifact.temp.output.soccerfield:jar" value="${artifacts.temp.dir}/SoccerField_jar"/>
    <mkdir dir="${artifact.temp.output.soccerfield:jar}"/>
    <jar destfile="${temp.jar.path.SoccerField.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${soccerfield.output.dir}"/>
      <zipfileset dir="${scdcommunication.output.dir}"/>
      <zipfileset dir="${players-generator.output.dir}"/>
      <zipfileset src="${basedir}/libs/gson-2.2.4.jar"/>
      <zipfileset src="${basedir}/libs/synthetica.jar"/>
      <zipfileset src="${basedir}/libs/httpcore-4.3.jar"/>
      <zipfileset src="${basedir}/libs/animationx2.5.jar"/>
      <zipfileset src="${basedir}/libs/commons-io-2.4.jar"/>
      <zipfileset src="${basedir}/libs/httpmime-4.3.1.jar"/>
      <zipfileset src="${basedir}/libs/fluent-hc-4.3.1.jar"/>
      <zipfileset src="${basedir}/libs/httpclient-4.3.1.jar"/>
      <zipfileset src="${basedir}/libs/commons-codec-1.6.jar"/>
      <zipfileset src="${basedir}/libs/syntheticaBlueIce.jar"/>
      <zipfileset src="${basedir}/libs/commons-logging-1.1.3.jar"/>
      <zipfileset src="${basedir}/libs/httpclient-cache-4.3.1.jar"/>
      <zipfileset src="${basedir}/../Players-Generator/lib/gson-2.2.4.jar"/>
      <zipfileset src="${basedir}/../Players-Generator/lib/miglayout-4.0-swing.jar"/>
      <zipfileset src="${basedir}/../SCDCommunication/libs/java_websocket.jar"/>
    </jar>
    <copy file="${temp.jar.path.SoccerField.jar}" tofile="${artifact.temp.output.soccerfield:jar}/SoccerField.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.soccerfield:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.soccerfield:jar}"/>
    <copy todir="${artifact.output.soccerfield:jar}">
      <fileset dir="${artifact.temp.output.soccerfield:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>